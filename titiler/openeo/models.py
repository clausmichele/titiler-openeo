"""titiler.openeo Models.

generated by https://github.com/koxudaxi/datamodel-code-generator/:
filename:  https://github.com/Open-EO/openeo-api/blob/1.2.0/openapi.yaml

"""

from __future__ import annotations

from typing import List, Literal, Optional

from pydantic import AnyUrl, BaseModel, Field

OPENEO_VERSION = "1.2.0"


class Link(BaseModel):
    rel: str = Field(
        ...,
        description="Relationship between the current document and the linked document. SHOULD be a [registered link relation type](https://www.iana.org/assignments/link-relations/link-relations.xml) whenever feasible.",
        example="related",
    )
    href: AnyUrl = Field(
        ...,
        description="The value MUST be a valid URL.",
        example="https://openeo.example",
    )
    type: Optional[str] = Field(
        None,
        description="The value MUST be a string that hints at the format used to represent data at the provided URI, preferably a media (MIME) type.",
        example="text/html",
    )
    title: Optional[str] = Field(
        None, description="Used as a human-readable label for a link.", example="openEO"
    )


class openEOVersion(BaseModel):
    url: AnyUrl = Field(
        ...,
        description="*Absolute* URLs to the service.",
        example="https://openeo.example",
    )
    production: Optional[bool] = Field(
        False,
        description="Specifies whether the implementation is ready to be used in production use (`true`) or not (`false`).\nClients SHOULD only connect to non-production implementations if the user explicitly confirmed to use a non-production implementation.\nThis flag is part of `GET /.well-known/openeo` and `GET /`. It MUST be used consistently in both endpoints.",
    )
    api_version: Literal["1.2.0"] = Field(
        description="Version number of the openEO specification this back-end implements",
    )


class openEOVersions(BaseModel):
    versions: List[openEOVersion]


class Endpoint(BaseModel):
    path: str = Field(
        ...,
        description="""Path to the endpoint, relative to the URL of this
        endpoint. In general the paths MUST follow the paths
        specified in the openAPI specification as closely as
        possible. Therefore, paths MUST be prepended with a
        leading slash, but MUST NOT contain a trailing
        slash. Variables in the paths MUST be placed in
        curly braces and follow the parameter names in the
        openAPI specification, e.g. `{job_id}`.""",
    )
    methods: List[Literal["GET", "POST", "PATCH", "PUT", "DELETE", "OPTIONS"]] = Field(
        ...,
        description="Supported HTTP verbs in uppercase. It is OPTIONAL to list `OPTIONS` as method.",
    )


class Plan(BaseModel):
    name: str = Field(
        ...,
        description="Name of the plan. It MUST be accepted in a *case insensitive* manner throughout the API",
        example="free",
    )
    description: str = Field(
        ...,
        description="A description that gives a rough overview over the plan",
        example="Free plan for testing",
    )
    paid: bool = Field(
        ...,
        description="Indicates whether the plan is a paid plan (`True`) or a free plan (`False`)",
        example="Free plan for testing",
    )
    url: Optional[AnyUrl] = Field(
        None,
        description="URL to a web page with more details about the plan",
        example="https://cloud.example/plans/free-plan",
    )


class Billing(BaseModel):
    currency: str = Field(
        ...,
        description="""The currency the back-end is billing in. The currency
        MUST be either a valid currency code as defined in
        ISO-4217 or a back-end specific unit that is used for
        billing such as credits, tiles or CPU hours.
        If set to `null`, budget and costs are not supported
        by the back-end and users can't be charged.""",
        example="USD",
    )
    default_plan: Optional[str] = Field(
        description="""Name of the plan the back-end uses for billing in case
                          1. the user has not subscribed to a specific plan
                             (see `default_plan` in `GET /me`) and
                          2. also did not provide a specific plan with the
                             processing request.

                          If a free plan is available at the back-end, it is
                          probably most useful to provide this as the back-end
                          wide default plan and override it with paid plans through
                          the user-specific default plan in `GET /me`.
                          Otherwise, users that have not set up payment yet MAY
                          receive an error for each processing requests where
                          they did not provide a free plan specifically.""",
        example="free",
    )
    plans: Optional[List[Plan]] = Field(None, description="Array of plans")


class Capabilities(BaseModel):
    api_version: Literal["1.2.0"] = Field(
        description="Version number of the openEO specification this back-end implements",
    )
    backend_version: str = Field(
        ...,
        description="Version number of the back-end implementation.",
        example="0.1.0",
    )
    stac_version: str = Field(
        ...,
        pattern=r"^(0\.9.\d+|1\.\d+.\d+)",
        description="The [version of the STAC specification](https://github.com/radiantearth/stac-spec/releases), which MAY not be equal to the [STAC API version](#tag/EO-Data-Discovery/STAC). Supports versions 0.9.x and 1.x.x.",
        example="1.0.0",
    )
    type: Optional[Literal["Catalog"]] = Field(
        None,
        description="For STAC versions >= 1.0.0-rc.1 this field is required.",
        example="Catalog",
    )
    id: str = Field(
        ...,
        description="Identifier for the service.",
        example="cool-eo-cloud",
    )
    title: str = Field(
        ...,
        description="The name of the service.",
        example="Example Cloud Corp",
    )
    description: str = Field(
        ...,
        description="A description of the service, which allows the service provider to introduce the user to its service",
        example="""This service is provided to you by [Example Cloud Corp.](https://cloud.example). It implements the full openEO API and allows to process a range of 999 EO data sets, including

                      * Sentinel 1/2/3 and 5
                      * Landsat 7/8

                      A free plan is available to test the service. For further information please contact our customer service at [support@cloud.example](mailto:support@cloud.example).""",
    )
    conformsTo: Optional[List[AnyUrl]] = Field(
        None,
        description="Lists all conformance classes specified in various standards that the\nimplementation conforms to. Conformance classes are commonly used in\nall OGC APIs and the STAC API specification.\n\nThe general openEO conformance class is `https://api.openeo.org/1.2.0`.\nSee the individual openEO API extensions for their conformance classes.\n\nThis property is REQUIRED for STAC API versions 1.0.0-beta.1 and later.",
        example=[
            "https://api.openeo.org/1.2.0",
            "https://api.openeo.org/extensions/commercial-data/0.1.0",
            "https://api.openeo.org/extensions/federation/0.1.0",
            "https://api.stacspec.org/v1.0.0/collections",
        ],
    )
    production: Optional[bool] = Field(
        False,
        description="Specifies whether the implementation is ready to be used in production use (`true`) or not (`false`).\nClients SHOULD only connect to non-production implementations if the user explicitly confirmed to use a non-production implementation.\nThis flag is part of `GET /.well-known/openeo` and `GET /`. It MUST be used consistently in both endpoints.",
    )
    endpoints: List[Endpoint] = Field(
        ...,
        description="""Lists all supported endpoints. Supported are all
        endpoints, which are implemented, return usually
        a 2XX or 3XX HTTP status code and are fully compatible
        to the API specification.
        An entry for this endpoint (path `/` with method `GET`)
        SHOULD NOT be listed.
        Each path MUST only be listed once in the array.""",
    )
    billing: Optional[Billing] = Field(
        None,
        description="""Billing related data, e.g. the currency used or available plans to process jobs.

        This property MUST be specified if the back-end uses any
        billing related API functionalities, e.g. budgeting or
        estimates.

        The absence of this property doesn't mean the back-end is
        necessarily free to use for all. Providers may choose to
        bill users outside of the API, e.g. with a monthly fee
        that is not depending on individual API interactions.""",
    )
    links: List[Link] = Field(
        ...,
        description="Links related to this service, e.g. the homepage of the service provider or the terms of service.",
    )
